[다형성] p.354
다양한 객체를 이용해 다양한 실행결과가 나오도록 하는 성질

(자동 타입 변환)
int x = 10; int y = 20;
double avg = (double) x+y;
기본 타입 변환과 마찬가지로 클래스도 변환이 가능한데
상속 관계에 있는 클래스 사이에서 발생함. 자식타입->부모타입

자식은 부모의 특징과 기능을 상속받아 부모와 동일하게 취급될 수 있음
ex) 고양이가 동물의 특징과 기능을 상속받음 -> "고양이는 동물이다" 성립
Cat cat = new Cat();
Animal animal = cat;  or  Animal animal = new Cat();

참조 변수의 ==연산은 참조 번지가 같은 경우를 따짐
바로 위의 부모가 아닌 상속 계층에서도 자동타입변환이 일어남

부모 타입으로 자동 타입변환된 이후에는 부모 클래스에 선언된 필드와 메소드만 접근가능
변수는 자식 객체를 참조하나 변수로 접근 가능한 멤버는 부모로 한정
그러나 예외로 자식클래스에서 메소드 재정의 시 자식메소드가 호출됨

(필드의 다형성)
필드의 타입을 부모로 선언하면 다양한 자식 객체들이 저장될 수 있어 사용 결과가 달라짐
p.362-366 Tire예제

(매개변수의 다형성)
매개값을 다양화하기 위해 매개변수에 자식객체를 지정
매개변수의 타입이 클래스인 경우, 해당 클래스의 객체뿐만 아니라 자식객체까지도 매개값으로
사용 가능, 자식이 메소드재정의를 했다면 재정의된 메소드를 호출함으로써 실행결과가 달라짐
