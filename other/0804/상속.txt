[상속]

(클래스 상속)
상위 클래스: 부모 클래스 , 하위 클래스: 자식 클래스
클래스를 재사용하여 중복되는 코드를 줄여줌.

프로그램에서는 자식이 부모를 선택.
class Child extends Parent {

다중 상속 불가능
class Child extends Parent1, Parent2 {  <-- X

부모 클래스에서 private 접근 제한을 갖는 필드와 메서드는 상속 제외

부모와 자식이 다른 패키지에 존재하면 default 접근 제한을 갖는 필드와 메서드도 상속 제외

(부모 생성자 호출)
자식 객체를 생성하면 부모 객체 생성 -> 자식 객체 생성 순으로 생김

객체는 클래스의 생성자를 호출해야 생성됨
자식 객체를 생성하면 자식 생성자 맨 앞 줄 super();로 부모 기본 생성자를 먼저 호출함
기본 생성자는 컴파일러에 의해 자동으로 만들어짐

부모가 변수가 있는 생성자만 존재하면
super(매개값) 명시적으로 호출해야함
* 이 경우 반드시 super가 자식 생성자 맨 첫 줄에 위치해야함

(메소드 재정의 : 오버라이딩)
자식 클래스에서 부모 클래스를 다시 정의하는 것
* 부모의 메소드와 동일한 시그니처(리턴 타입, 메소드명, 매개변수목록)를 가져야함
* 접근 제한을 더 강하게 재정의 X
(부모메서드가 public일 때 자식메서드가 default나 private로 불가능 / 반대의 경우는 가능)
* 새로운 Exception을 throws 할 수 없음

메소드 재정의 시
부모 클래스의 메소드는 숨겨지고 재정의된 자식 클래스 메소드만 사용됨
만일 다시 부모 클래스의 메서드를 쓰고싶다면 super.부모메서드();로 호출 가능

(final 클래스와 final 메소드)
클래스에 final이 붙으면 부모 클래스가 될 수 없음 ex) String 클래스
메소드에 final이 붙으면 재정의 할 수 없음